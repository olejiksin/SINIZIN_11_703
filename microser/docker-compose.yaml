version: '3'
services:
        
    postgres:
        image: olejiksin/postgres
        restart: on-failure
        build:
            context: ./postgresql
            dockerfile: Dockerfile
        volumes:
          - ./data:/var/lib/postgresql/data 
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
          PGDATA: 
             ./data
        ports:
          - 5432
    
            
    front:
        build: 
            context: ./
            dockerfile: Dockerfile
        image: olejiksin/frontstomp
        volumes:
          - ./:/usr/src/app
        ports:
            - 3000:3000
        command: npm start
        depends_on: 
            - back
            - zuul
            - EurekaService
    
    
    back:
        build: 
            context: ./backStomp
            dockerfile: Dockerfile
        image: olejiksin/backstomp
        working_dir: /backStomp
        volumes:
         - ./backStomp:/backStomp
        ports: 
            - 8070:8070
        depends_on:
            - postgres
            - zuul
            - EurekaService
        command: mvn clean spring-boot:run
    
    
    EurekaService:
        build: 
            context: ./ServiceRegistry
            dockerfile: Dockerfile
        image: olejiksin/service
        restart: on-failure
        volumes:
          - ./ServiceRegistry:/ServiceRegistry
        ports:
            - 8761:8761
        command: mvn clean spring-boot:run
        depends_on: 
            - postgres
            
    zuul:
        build: 
            context: ./ZuulService
            dockerfile: Dockerfile
        image: olejiksin/zuul
        restart: on-failure
        volumes:
          - ./ZuulService:/ZuulService
        ports:
            - 8080:8080
        command: mvn clean spring-boot:run
        depends_on: 
            - postgres
            - EurekaService

    